using Xunit;
using System.Collections.Generic;
using ReturnHome.Packet;
using ReturnHome.Packet.Bundle.Message;
using ReturnHome.Packet.Bundle.Message.Types;

namespace ReturnHomePacket.Bundle.Message.Types {
    public class AccountCredentialsTest {
        [Fact]
        public void TestReadAccountCredentials() {
            List<byte> bytes = new List<byte> {
                0x00, 0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x45, 0x51, 0x4f, 0x41, 0x0a, 0x00, 0x00,
                0x00, 0x6b, 0x69, 0x65, 0x73, 0x68, 0x61, 0x65, 0x73, 0x68, 0x61, 0x01, 0xfa, 0x10, 0x69, 0x22,
                0x1c, 0xd4, 0x45, 0xbc, 0xfd, 0x68, 0x3c, 0x56, 0x22, 0x87, 0xd9, 0x70, 0xb7, 0x1c, 0x12, 0xae,
                0x76, 0xc4, 0x98, 0xfd, 0xf3, 0xce, 0xeb, 0x44, 0x4a, 0x0a, 0x49, 0xb5};
            PacketBytes expectedBytes = PacketBytes.Of(bytes);
            OpcodeMessage accountCredentials = AccountCredentials.Read(PacketBytes.Of(bytes));
            PacketBytes actualBytes = accountCredentials.Serialize();
            Assert.Equal(expectedBytes, actualBytes);
        }

        [Fact]
        public void TestReadAccountCredentialsName() {
            List<byte> bytes = new List<byte> {
                0x00, 0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x45, 0x51, 0x4f, 0x41, 0x0a, 0x00, 0x00,
                0x00, 0x6b, 0x69, 0x65, 0x73, 0x68, 0x61, 0x65, 0x73, 0x68, 0x61, 0x01, 0xfa, 0x10, 0x69, 0x22,
                0x1c, 0xd4, 0x45, 0xbc, 0xfd, 0x68, 0x3c, 0x56, 0x22, 0x87, 0xd9, 0x70, 0xb7, 0x1c, 0x12, 0xae,
                0x76, 0xc4, 0x98, 0xfd, 0xf3, 0xce, 0xeb, 0x44, 0x4a, 0x0a, 0x49, 0xb5};
            string expectedName = "kieshaesha";
            AccountCredentials accountCredentials = (AccountCredentials)AccountCredentials.Read(PacketBytes.Of(bytes));
            string actualName = accountCredentials.AccountName();
            Assert.Equal(expectedName, actualName);
        }
    }
}
